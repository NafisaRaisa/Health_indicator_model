# -*- coding: utf-8 -*-
"""Feature_Selection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OuovS1SFWIYX6x37D_0DOuyeKsJCZ0Gq

Feature Selection. Goal: determining which features better help predict whether someone has diabetes
"""

df.info()                                     #gets info on dfset

pd.read_csv('/content/drive/MyDrive/Colab Notebooks/diabetes_binary_5050split_health_indicators_BRFSS2015.csv')

import pandas as pd
                                                        # Make sure pandas is loaded
import numpy as np
import seaborn as sns

import matplotlib.pyplot as plt

#location of the datatse
df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/diabetes_binary_5050split_health_indicators_BRFSS2015.csv') # Note that pd.read_csv is used because we imported pandas as pd

#change data to int
df["Diabetes_binary"] = df["Diabetes_binary"].astype('int')
df["HighBP"] = df["HighBP"].astype('int')
df["HighChol"] = df["HighChol"].astype('int')
df["CholCheck"] = df["CholCheck"].astype('int')
df["BMI"] = df["BMI"].astype('int')
df["Smoker"] = df["Smoker"].astype('int')
df["Stroke"] = df["Stroke"].astype('int')
df["HeartDiseaseorAttack"] = df["HeartDiseaseorAttack"].astype('int')
df["PhysActivity"] = df["PhysActivity"].astype('int')
df["Fruits"] = df["Fruits"].astype('int')
df["Veggies"] = df["Veggies"].astype('int')
df["HvyAlcoholConsump"] = df["HvyAlcoholConsump"].astype('int')
df["AnyHealthcare"] = df["AnyHealthcare"].astype('int')
df["NoDocbcCost"] = df["NoDocbcCost"].astype('int')
df["GenHlth"] = df["GenHlth"].astype('int')
df["MentHlth"] = df["MentHlth"].astype('int')
df["PhysHlth"] = df["PhysHlth"].astype('int')
df["DiffWalk"] = df["DiffWalk"].astype('int')
df["Sex"] = df["Sex"].astype('int')
df["Age"] = df["Age"].astype('int')
df["Education"] = df["Education"].astype('int')
df["Income"] =df["Income"].astype('int')

df.info()

df.size                                       #the total number of array elements

df.shape                                          #the size of each dimension

df.head()

df.describe(include = 'all')

df.apply(pd.Series.value_counts)

for column in df.columns:
    print(column)
    print(df[column].value_counts().sort_index())
    print()

#print out top 20 most popular bmi
print(df['BMI'].value_counts().sort_values(ascending=False).head(20))

for col in df.columns:
    # Get a count of the occurrences of each unique value in the column
    value_counts = df[col].value_counts()

    # Plot a bar chart for the value counts of the column
    ax = value_counts.plot(kind='bar', figsize=(15, 6))
    ax.set_xlabel(col)
    ax.set_ylabel('Count')
    plt.show()

#printing out bmi bar graph with top 45 for slides
# Get a count of the occurrences of each unique value in the BMI column
value_counts = df['BMI'].value_counts().head(45)

# Plot a bar chart for the value counts of the BMI column
ax = value_counts.plot(kind='bar', figsize=(15, 6))
ax.set_xlabel('BMI')
ax.set_ylabel('Count')
plt.show()

df.corr()  #check correlation

corr_matrix = df.corr()
print(corr_matrix['Diabetes_binary'])       #only prints corr between Diabetes_binary and rest

abs_corr = abs(df.corr(numeric_only=False)['Diabetes_binary'])
top15_features = abs_corr.sort_values(ascending=True)[1:16].index.tolist()
print(top15_features)

abs_corr = abs(df.corr(numeric_only=False)['Diabetes_binary'])
top15_features = abs_corr.sort_values(ascending=False)[1:16]

print("Top 15 features correlated with Diabetes_binary:")
for feature, corr in top15_features.items():
    print(f"{feature} : {corr:.3f}")

# Print unique values for columns
print('Unique values in column CholCheck:', df['CholCheck'].unique())
print('Unique values in column BMI:', df['BMI'].unique())
print('Unique values in column Smoker:', df['Smoker'].unique())
print('Unique values in column Stroke:', df['Stroke'].unique())
print('Unique values in column HeartDiseaseorAttack:', df['HeartDiseaseorAttack'].unique())
print('Unique values in column PhysActivity:', df['PhysActivity'].unique())
print('Unique values in column Fruits:', df['Fruits'].unique())
print('Unique values in column Veggies:', df['Veggies'].unique())
print('Unique values in column HvyAlcoholConsump:', df['HvyAlcoholConsump'].unique())
print('Unique values in column AnyHealthcare:', df['AnyHealthcare'].unique())
print('Unique values in column NoDocbcCost:', df['NoDocbcCost'].unique())
print('Unique values in column GenHlth:', df['GenHlth'].unique())
print('Unique values in column MentHlth:', df['MentHlth'].unique())
print('Unique values in column PhysHlth:', df['PhysHlth'].unique())
print('Unique values in column DiffWalk:', df['DiffWalk'].unique())
print('Unique values in column Sex:', df['Sex'].unique())
print('Unique values in column Age:', df['Age'].unique())
print('Unique values in column Education:', df['Education'].unique())
print('Unique values in column Income:', df['Income'].unique())

"""Observation:
GenHlth and PhysHlth have postive relation with each other.
GenHlth and Income have negative relation with each other.

Observation: There is a positive corelation between Diabetes_binary and genhealth,highbp,bmi and difwalk. There is a negative correlation between diabete_binary and income,education and physical activty.
"""

df.isnull().sum() #check null vals

plt.figure(figsize = (20,10))
sns.heatmap(df.corr(),annot=True , cmap ='coolwarm' )
plt.title("correlation of all 22 features")

df[['Diabetes_binary', 'HighBP', 'HighChol', 'BMI', 'HeartDiseaseorAttack', 'GenHlth', 'PhysHlth', 'DiffWalk', 'Age', 'Income']].hist(figsize=(20,10))
plt.tight_layout()
plt.show()

from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import chi2

# separate the target variable and the features
X = df.drop('Diabetes_binary', axis=1)
y = df['Diabetes_binary']

# select the k best features using chi-square test
selector = SelectKBest(chi2, k=10)
X_new = selector.fit_transform(X, y)

# get the scores and p-values of the features
scores = selector.scores_
pvalues = selector.pvalues_

# print the results
for i in range(len(X.columns)):
    print(f"{X.columns[i]}: score={scores[i]}, p-value={pvalues[i]}")

# Select top 15 features using chi-square test
top_15_features = SelectKBest(chi2, k=15).fit(X, y)

# Print top 15 features based on chi-square score
feature_scores = pd.DataFrame({'feature': X.columns, 'score': top_15_features.scores_})
top_15 = feature_scores.nlargest(15, 'score')
print(top_15)

"""Based on outside research


HighBP: Valid


Supporting Evidence: "The first main finding of the present study is that not only does the presence of hypertension predict future diabetes, in agreement with earlier epidemiological observations 2, 3, 8, 9, but also that the incidence of hypertension increases significantly in the presence of diabetes" (Hypertension and diabetes: co-prediction and time trajectories Research paper https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5877818/#:~:text=The%20first%20main%20finding%20of,in%20the%20presence%20of%20diabetes.)


GeneralHealth: Valid

Supporting Evidence: "Four attributes were age, body mass index, diabetes pedigree function, and plasma glucose concentration" https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9018179/#:~:text=Four%20attributes%20were%20age%2C%20body,function%2C%20and%20plasma%20glucose%20concentration.


DiffWalk: Valid

Supporting Evidence: "Chronically elevated blood sugars can also damage nerves that tell muscles how to move"Muscle weakness and balance problems are factors of diabetes. https://www.webmd.com/diabetes/peripheral-neuropathy-risk-factors-symptoms#:~:text=Chronically%20elevated%20blood%20sugars%20can,carrying%20things%20with%20your%20hands.


BMI: Valid
Supporting Evidence: "Four attributes were age, body mass index, diabetes pedigree function, and plasma glucose concentration" https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9018179/#:~:text=Four%20attributes%20were%20age%2C%20body,function%2C%20and%20plasma%20glucose%20concentration.


HighChol: Valid
Supporting Evidence: "As traditional lipid parameters, total cholesterol (TC), TG, HDL-C and LDL-C are the most commonly used biomarkers to predict diabetes and prediabetes" https://bmcendocrdisord.biomedcentral.com/articles/10.1186/s12902-022-00984-x#:~:text=As%20traditional%20lipid%20parameters%2C%20total,7%2C8%2C9%5D.


Age: Valid

Supporting Evidence: "Four attributes were age, body mass index, diabetes pedigree function, and plasma glucose concentration" https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9018179/#:~:text=Four%20attributes%20were%20age%2C%20body,function%2C%20and%20plasma%20glucose%20concentration.

HeartDiseaseorAttack: Valid
Supporting Evidence: "Heart failure, a condition in which the heart fails to efficiently pump oxygenated blood through the body, also is a risk factor for diabetes." https://www.heart.org/en/news/2019/06/06/diabetes-and-heart-failure-are-linked-treatment-should-be-too#:~:text=But%20heart%20failure%2C%20a%20condition,a%20risk%20factor%20for%20diabetes.


PhysHlth: Valid
Supporting Evidence: "Four attributes were age, body mass index, diabetes pedigree function, and plasma glucose concentration" https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9018179/#:~:text=Four%20attributes%20were%20age%2C%20body,function%2C%20and%20plasma%20glucose%20concentration.


Income: Valid
Supporting Evidence: "Low income appears to be associated with a higher prevalence of diabetes and diabetes related complications" https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1618393/


Education: Valid
Supporting Evidence: Common sense

Physical Activity: Valid
Supporting Evidence: Physical inactivity increases the risk of developing type 2 diabetes, but regular exercise can help control blood sugar, weight, blood pressure, and cholesterol levels. Engaging in at least 150 minutes of moderate physical activity per week can also lower the risk of heart disease and nerve damage, common complications of diabetes. https://www.cdc.gov/chronicdisease/resources/publications/factsheets/physical-activity.htm#:~:text=Not%20getting%20enough%20physical%20activity%20can%20raise%20a%20person's%20risk,and%20lower%20%E2%80%9Cbad%E2%80%9D%20cholesterol. (CDC)

Stroke: Valid
Supporting Evidence: "If you have diabetes, your chances of having a stroke are 2 times higher than in people who don't have diabetes." https://diabetes.org/diabetes/stroke#:~:text=If%20you%20have%20diabetes%2C%20your,risk%20of%20getting%20a%20stroke. (American Diabetes Association)

MentalHealth: Valid
Supporting Evidence: "People who report chronic stress, low stress resilience, sleeping problems, or depression are at increased risk of developing type 2 diabetes. Recent evidence suggests that poor mental health is also a risk factor for the development of type 1 diabetes."https://onlinelibrary.wiley.com/doi/abs/10.1002/9781118924853.ch56#:~:text=People%20who%20report%20chronic%20stress,development%20of%20type%201%20diabetes. (Textbook of Diabetes UK)

CholCheck: Valid
Supporting Evidence: "Unfortunately, people with diabetes are more prone to having high cholesterol, which contributes to cardiovascular disease (CVD)." https://www.heart.org/en/health-topics/diabetes/diabetes-complications-and-risks/cholesterol-abnormalities--diabetes  

"Diabetes can have a negative effect on a person's cholesterol levels." https://www.medicalnewstoday.com/articles/9152#Complications-of-high-cholesterol

Smoker: Valid
Supporting Evidence: "Smoking is one cause of type 2 diabetes. In fact, people who smoke cigarettes are 30%–40% more likely to develop type 2 diabetes than people who don't smoke." https://www.cdc.gov/tobacco/campaign/tips/diseases/diabetes.html#:~:text=How%20Is%20Smoking%20Related%20to,cause%20of%20type%202%20diabetes.&text=In%20fact%2C%20people%20who%20smoke,people%20who%20don't%20smoke. (CDC)



"""

#top 15 heatmap

corr_matrix = df[['Diabetes_binary', 'GenHlth', 'HighBP', 'DiffWalk', 'BMI', 'HighChol', 'Age', 'HeartDiseaseorAttack', 'PhysHlth', 'Income', 'Education', 'PhysActivity', 'Stroke', 'MentHlth', 'CholCheck', 'Smoker']].corr()

plt.figure(figsize = (20,10))
sns.heatmap(corr_matrix,annot=True , cmap ='coolwarm' )
plt.title("correlation of top 15 features")